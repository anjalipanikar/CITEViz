% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gating.R
\name{create_gate_from_input}
\alias{create_gate_from_input}
\title{#create gate objects from user input selections}
\usage{
create_gate_from_input(
  input,
  is_forward_gating = TRUE,
  assay_count_data,
  gate_counter,
  reactive_gate_list,
  reactive_selected_gate,
  reactive_last_buttons_clicked
)
}
\arguments{
\item{input}{Reactive container for ui inputs}

\item{is_forward_gating}{Boolean for if the gating is forward or back gating}

\item{assay_count_data}{Feature expression data}

\item{gate_counter}{Integer of gate number}

\item{reactive_gate_list}{Reactive list of gates}

\item{reactive_selected_gate}{Reactive value of user chosen gate object}

\item{reactive_last_buttons_clicked}{Reactive list object tracking the last two buttons clicked of three possibilities: "gate_button","reset_button","clear_all_gates_button"}
}
\value{
a Gate object
}
\description{
#create gate objects from user input selections
}
\examples{

\dontrun{
   
   # The app uses the following to create a gate from user input
   
   gate_reactive_values[[paste0("gate_", counter)]] <- create_gate_from_input(input = input, # input is a shiny internal object that records user inputs
                                                                            is_forward_gating = TRUE, 
                                                                            assay_count_data = count_data, # specific assay count data 
                                                                            gate_counter = counter, # what number gate this is
                                                                            reactive_gate_list = gate_list(), 
                                                                            reactive_selected_gate = selected_gate(),
                                                                            reactive_last_buttons_clicked = last_buttons_clicked
                                                                            )
}

}
